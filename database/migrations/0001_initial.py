# Generated by Django 3.1.3 on 2021-08-29 05:13

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import utility.path


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('about', models.TextField(blank=True, max_length=500, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('number', models.CharField(blank=True, max_length=10, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to=utility.path.User_Profile_Picture_Path)),
                ('password', models.CharField(editable=False, max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('GenreName', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='WorkType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TypeName', models.CharField(max_length=20)),
                ('TypeDescription', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DateTimePosted', models.DateTimeField(default=django.utils.timezone.now)),
                ('Title', models.CharField(max_length=200)),
                ('Content', models.TextField(blank=True, null=True)),
                ('MainLiner', models.CharField(blank=True, max_length=500, null=True)),
                ('File', models.FileField(blank=True, null=True, upload_to=utility.path.Work_File_Path)),
                ('Image', models.ImageField(blank=True, null=True, upload_to=utility.path.Work_Image_Path)),
                ('ListingType', models.CharField(choices=[('PUBLIC', 'Public - Anyone on the internet can view'), ('PROTECTED', 'Protected - Only people registered with Perspectivo can view'), ('PRIVATE', 'Private - Only you can view')], default='PUBLIC', max_length=9)),
                ('Rating', models.IntegerField(default=0)),
                ('ByUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='WorkByUser', to=settings.AUTH_USER_MODEL)),
                ('Genre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='WorkGenre', to='database.genre')),
                ('WorkType', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='WorkType', to='database.worktype')),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Vote', models.CharField(choices=[('UPVOTE', 'UPVOTE'), ('DOWNVOTE', 'DOWNVOTE')], max_length=9)),
                ('ByUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='VotewByUser', to=settings.AUTH_USER_MODEL)),
                ('ForWork', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='VoteForWork', to='database.work')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DateTimePosted', models.DateTimeField(default=django.utils.timezone.now)),
                ('Title', models.CharField(max_length=200)),
                ('Text', models.TextField(blank=True, null=True)),
                ('File', models.FileField(blank=True, null=True, upload_to='workfiles/')),
                ('ByUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ReviewByUser', to=settings.AUTH_USER_MODEL)),
                ('ForWork', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ReviewForWork', to='database.work')),
            ],
        ),
    ]
